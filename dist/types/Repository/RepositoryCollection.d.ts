import SequenceRepository from './Entities/SequenceRepository';
import MarketplaceRepository from './Entities/MarketplaceRepository';
import SubscriptionRepository from './Entities/SubscriptionRepository';
import CrawlerRepository from './Entities/CrawlerRepository';
import CustomerHaendlerbundRepository from './Entities/CustomerHaendlerbundRepository';
import CustomerHaendlerbundMetricRepository from './Entities/CustomerHaendlerbundMetricRepository';
import CustomerMehrwertsteuercheckRepository from './Entities/CustomerMehrwertsteuercheckRepository';
import MemoryRepository from './Entities/MemoryRepository';
import ScoreRepository from './Entities/ScoreRepository';
import AlertingPolicyRepository from './Entities/AlertingPolicyRepository';
import AlertingChannelRepository from './Entities/AlertingChannelRepository';
import WebsocketRepository from './Entities/WebsocketRepository';
import MetricRepository from './Entities/MetricRepository';
import AuthRepository from './Entities/AuthRepository';
import ClusterUserRepository from './Entities/ClusterUserRepository';
import UserRepository from './Entities/UserRepository';
import UserSubscriptionRepository from './Entities/UserSubscriptionRepository';
import InvitationRepository from './Entities/InvitationRepository';
import ClusterCompanyRepository from './Entities/ClusterCompanyRepository';
import ComponentRepository from './Entities/ComponentRepository';
import ProjectRepository from './Entities/ProjectRepository';
import SystemRepository from './Entities/SystemRepository';
import ScreenshotRepository from './Entities/ScreenshotRepository';
import ToolRepository from './Entities/ToolRepository';
import CheckRepository from './Entities/CheckRepository';
import CheckLighthouseRepository from './Entities/CheckLighthouseRepository';
import CheckA11yRepository from './Entities/CheckA11yRepository';
import CheckBrokenResourceRepository from './Entities/CheckBrokenResourceRepository';
import CheckJavaScriptErrorsRepository from './Entities/CheckJavaScriptErrorsRepository';
import CheckFileSizeRepository from './Entities/CheckFileSizeRepository';
import CheckSitemapRepository from './Entities/CheckSitemapRepository';
import CheckMobileFriendlyRepository from './Entities/CheckMobileFriendlyRepository';
import CheckCertificateRepository from './Entities/CheckCertificateRepository';
import CheckInsecureContentRepository from './Entities/CheckInsecureContentRepository';
import CheckCookieRepository from './Entities/CheckCookieRepository';
import CheckDeadLinksRepository from './Entities/CheckDeadLinksRepository';
import CheckHealthCheckRepository from './Entities/CheckHealthCheckRepository';
import NixstatsRepository from './Entities/NixstatsRepository';
import IncidentRepository from './Entities/IncidentRepository';
import Connection from '../Connection/Connection';
import ApplicationRepository from './Entities/ApplicationRepository';
import LocationRepository from "./Entities/LocationRepository";
import CompanyRepository from "./Entities/CompanyRepository";
import Auth2Repository from "./Entities/Auth2Repository";
import TwoFactorRepository from "./Entities/TwoFactorRepository";
declare class RepositoryCollection {
    private readonly repositories;
    private masterConnection;
    private clusterConnection;
    constructor();
    setClusterConnection(connection: Connection): void;
    setMasterConnection(connection: Connection): void;
    getRepository(entityType: string): any;
    getAuth2Repository(): Auth2Repository;
    getSequenceRepository(): SequenceRepository;
    getMarketplaceRepository(): MarketplaceRepository;
    getSubscriptionRepository(): SubscriptionRepository;
    getCrawlerRepository(): CrawlerRepository;
    getCustomerHaendlerbundRepository(): CustomerHaendlerbundRepository;
    getCustomerHaendlerbundMetricRepository(): CustomerHaendlerbundMetricRepository;
    getCustomerMehrwertsteuercheckRepository(): CustomerMehrwertsteuercheckRepository;
    getMemoryRepository(): MemoryRepository;
    getScoreRepository(): ScoreRepository;
    getAlertingPolicyRepository(): AlertingPolicyRepository;
    getAlertingChannelRepository(): AlertingChannelRepository;
    getWebsocketRepository(): WebsocketRepository;
    getMetricRepository(): MetricRepository;
    getAuthRepository(): AuthRepository;
    getClusterUserRepository(): ClusterUserRepository;
    getUserRepository(): UserRepository;
    getUserSubscriptionRepository(): UserSubscriptionRepository;
    getInvitationRepository(): InvitationRepository;
    getClusterCompanyRepository(): ClusterCompanyRepository;
    getComponentRepository(): ComponentRepository;
    getProjectRepository(): ProjectRepository;
    getSystemRepository(): SystemRepository;
    getScreenshotRepository(): ScreenshotRepository;
    getToolRepository(): ToolRepository;
    getCheckRepository(): CheckRepository;
    getCheckLighthouseRepository(): CheckLighthouseRepository;
    getCheckA11yRepository(): CheckA11yRepository;
    getCheckBrokenResourceRepository(): CheckBrokenResourceRepository;
    getCheckJavaScriptErrorsRepository(): CheckJavaScriptErrorsRepository;
    getCheckFileSizeRepository(): CheckFileSizeRepository;
    getCheckSitemapRepository(): CheckSitemapRepository;
    getCheckMobileFriendlyRepository(): CheckMobileFriendlyRepository;
    getCheckCertificateRepository(): CheckCertificateRepository;
    getCheckInsecureContentRepository(): CheckInsecureContentRepository;
    getCheckCookieRepository(): CheckCookieRepository;
    getCheckDeadLinksRepository(): CheckDeadLinksRepository;
    getCheckHealthCheckRepository(): CheckHealthCheckRepository;
    getNixstatsRepository(): NixstatsRepository;
    getIncidentRepository(): IncidentRepository;
    getApplicationRepository(): ApplicationRepository;
    getLocationRepository(): LocationRepository;
    getCompanyRepository(): CompanyRepository;
    getTwoFactorRepository(): TwoFactorRepository;
}
export default RepositoryCollection;
